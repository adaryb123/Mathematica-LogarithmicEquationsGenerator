(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     17601,        415]
NotebookOptionsPosition[     17237,        397]
NotebookOutlinePosition[     17622,        414]
CellTagsIndexPosition[     17579,        411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{Cell["", "InitializationSection"], 
   RowBox[{
   "Get", "[", 
    "\"\<C:\\\\Users\\\\uzivatel\\\\Desktop\\\\bp\\\\\
SimpleLogarithmicEquation.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\uzivatel\\\\Desktop\\\\bp\\\\\
AdditionLogarithmicEquation.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\uzivatel\\\\Desktop\\\\bp\\\\\
SubtractionLogarithmicEquation.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\uzivatel\\\\Desktop\\\\bp\\\\\
QuadraticLogarithmicEquation.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Get", "[", 
    "\"\<C:\\\\Users\\\\uzivatel\\\\Desktop\\\\bp\\\\\
ExponentialLogarithmicEquation.m\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateSelectedEquation", "[", 
    RowBox[{"equationType_", ",", "withResult_", ",", "withSolution_"}], 
    "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "resultString", ",", "equation", ",", "xValue", ",", "steps", ",", 
       "explanations", ",", "equationAndXValue", ",", "stepsAndExplanations", 
       ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"resultString", " ", "=", "  ", "\"\<\>\""}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<BASIC\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"equationAndXValue", "=", 
         RowBox[{"generateSimpleLogarithmicEquation", "[", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<ADDITION\>\""}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"equationAndXValue", "=", 
         RowBox[{"generateAdditionLogarithmicEquation", "[", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<SUBTRACTION\>\""}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"equationAndXValue", "=", 
         RowBox[{"generateSubtractionLogarithmicEquation", "[", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<QUADRATIC\>\""}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"equationAndXValue", "=", 
         RowBox[{"generateQuadraticLogarithmicEquation", "[", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<EXPONENTIAL\>\""}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"equationAndXValue", "=", 
         RowBox[{"generateExponentialLogarithmicEquation", "[", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"equation", "=", 
       RowBox[{"Part", "[", 
        RowBox[{"equationAndXValue", ",", "1"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"resultString", " ", "=", " ", 
       RowBox[{"resultString", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"TraditionalForm", "[", "equation", "]"}], "]"}], " ", "<>", 
        " ", "\"\<\\n\>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"withResult", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", "   ", 
        RowBox[{
         RowBox[{"xValue", "=", 
          RowBox[{"Part", "[", 
           RowBox[{"equationAndXValue", ",", "2"}], "]"}]}], ";", "\n", "\t", 
         RowBox[{"resultString", " ", "=", " ", 
          RowBox[{
          "resultString", " ", "<>", " ", "\"\<Result: x = \>\"", "<>", " ", 
           RowBox[{"ToString", "[", "xValue", "]"}], "<>", " ", 
           "\"\<\\n\>\""}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"withSolution", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", "    ", 
        RowBox[{
         RowBox[{"resultString", " ", "=", " ", 
          RowBox[{"resultString", " ", "<>", " ", "\"\<Solution: \\n\>\""}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<BASIC\>\""}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"stepsAndExplanations", " ", "=", " ", 
            RowBox[{
            "solveSimpleLogarithmicEquation", "[", "equation", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"equationType", " ", "\[Equal]", " ", "\"\<ADDITION\>\""}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"stepsAndExplanations", " ", "=", " ", 
            RowBox[{
            "solveAdditionLogarithmicEquation", "[", "equation", "]"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
           "equationType", " ", "\[Equal]", " ", "\"\<SUBTRACTION\>\""}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"stepsAndExplanations", " ", "=", " ", 
            RowBox[{
            "solveSubtractionLogarithmicEquation", "[", "equation", "]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
           "equationType", " ", "\[Equal]", " ", "\"\<QUADRATIC\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"stepsAndExplanations", " ", "=", " ", 
            RowBox[{
            "solveQuadraticLogarithmicEquation", "[", "equation", "]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
           "equationType", " ", "\[Equal]", " ", "\"\<EXPONENTIAL\>\""}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"stepsAndExplanations", " ", "=", " ", 
            RowBox[{
            "solveExponentialLogarithmicEquation", "[", "equation", "]"}]}]}],
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"stepsAndExplanations", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"explanations", " ", "=", " ", 
          RowBox[{"stepsAndExplanations", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", " ", "=", "1"}], ",", " ", 
           RowBox[{"j", " ", "<=", " ", 
            RowBox[{"Length", "[", "steps", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"resultString", " ", "=", " ", 
            RowBox[{"resultString", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"TraditionalForm", "[", 
               RowBox[{"steps", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], " ", "<>", 
             "\"\<\\n\\t\\t\\t\\t    \>\"", " ", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"TraditionalForm", "[", 
               RowBox[{"explanations", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], " ", "<>", " ", 
             "\"\<\\n\>\""}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "resultString", "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "equation", "  ", "=", " ", 
    "\"\<Start with selecting one of 5 equation types above\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", " ", 
     RowBox[{"Text", "@", 
      RowBox[{"Row", "[", 
       RowBox[{"{", "equation", "}"}], "]"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Basic\>\"", ",", 
        RowBox[{"equation", " ", "=", " ", 
         RowBox[{"generateSelectedEquation", "[", 
          RowBox[{"\"\<BASIC\>\"", ",", "withResult", ",", "withSolution"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", " ", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Addition\>\"", ",", 
        RowBox[{"equation", " ", "=", " ", 
         RowBox[{"generateSelectedEquation", "[", 
          RowBox[{
          "\"\<ADDITION\>\"", ",", "withResult", ",", "withSolution"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Subtraction\>\"", ",", 
        RowBox[{"equation", " ", "=", " ", 
         RowBox[{"generateSelectedEquation", "[", 
          RowBox[{
          "\"\<SUBTRACTION\>\"", ",", "withResult", ",", "withSolution"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Quadratic\>\"", ",", 
        RowBox[{"equation", " ", "=", " ", 
         RowBox[{"generateSelectedEquation", "[", 
          RowBox[{
          "\"\<QUADRATIC\>\"", ",", "withResult", ",", "withSolution"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Exponential\>\"", ",", 
        RowBox[{"equation", " ", "=", " ", 
         RowBox[{"generateSelectedEquation", "[", 
          RowBox[{
          "\"\<EXPONENTIAL\>\"", ",", "withResult", ",", "withSolution"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "50", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"withResult", ",", "True", ",", "\"\<Show results\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "50", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "withSolution", ",", "True", ",", "\"\<Show solutions\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], " ", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.827170753630476*^9, 3.827170754911454*^9}, {
  3.8271708171817427`*^9, 3.8271708346992493`*^9}, {3.82717104376431*^9, 
  3.8271710968257155`*^9}, {3.8271711350376687`*^9, 3.8271711964265995`*^9}, {
  3.827171254832966*^9, 3.8271715000318365`*^9}, {3.82717154682393*^9, 
  3.827171573863494*^9}, {3.8271717880085726`*^9, 3.827171879206684*^9}, {
  3.82717191180506*^9, 3.8271719157763643`*^9}, {3.82717196664923*^9, 
  3.827171993242691*^9}, {3.8271721407742977`*^9, 3.8271722304013867`*^9}, {
  3.8271722781986065`*^9, 3.827172282556962*^9}, {3.827172472794574*^9, 
  3.8271724750909476`*^9}, {3.827172520825542*^9, 3.8271725317514963`*^9}, {
  3.8271725746882515`*^9, 3.8271726040197673`*^9}, {3.827172717056532*^9, 
  3.8271728498846703`*^9}, {3.8272064943217793`*^9, 3.8272065366423435`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`withResult$$ = 
    True, $CellContext`withSolution$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`withResult$$], True, "Show results"}, {
      True, False}}, {{
       Hold[$CellContext`withSolution$$], True, "Show solutions"}, {
      True, False}}, {
      Hold[
       Row[{
         Button[
         "Basic", $CellContext`equation = \
$CellContext`generateSelectedEquation[
           "BASIC", $CellContext`withResult$$, $CellContext`withSolution$$], 
          ImageSize -> 80], 
         Button[
         "Addition", $CellContext`equation = \
$CellContext`generateSelectedEquation[
           "ADDITION", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
         Button[
         "Subtraction", $CellContext`equation = \
$CellContext`generateSelectedEquation[
           "SUBTRACTION", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
         Button[
         "Quadratic", $CellContext`equation = \
$CellContext`generateSelectedEquation[
           "QUADRATIC", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
         Button[
         "Exponential", $CellContext`equation = \
$CellContext`generateSelectedEquation[
           "EXPONENTIAL", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
         Spacer[50], 
         Manipulate`Place[1], 
         Spacer[50], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {383., {311., 318.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`withResult$304$$ = 
    False, $CellContext`withSolution$305$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`withResult$$ = 
        True, $CellContext`withSolution$$ = True}, "ControllerVariables" :> {
        Hold[$CellContext`withResult$$, $CellContext`withResult$304$$, False], 
        Hold[$CellContext`withSolution$$, $CellContext`withSolution$305$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Text[
          Row[{$CellContext`equation}]]}], 
      "Specifications" :> {{{$CellContext`withResult$$, True, 
          "Show results"}, {True, False}, ControlPlacement -> 
         1}, {{$CellContext`withSolution$$, True, "Show solutions"}, {
         True, False}, ControlPlacement -> 2}, 
        Row[{
          Button[
          "Basic", $CellContext`equation = \
$CellContext`generateSelectedEquation[
            "BASIC", $CellContext`withResult$$, $CellContext`withSolution$$], 
           ImageSize -> 80], 
          Button[
          "Addition", $CellContext`equation = \
$CellContext`generateSelectedEquation[
            "ADDITION", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
          Button[
          "Subtraction", $CellContext`equation = \
$CellContext`generateSelectedEquation[
            "SUBTRACTION", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
          Button[
          "Quadratic", $CellContext`equation = \
$CellContext`generateSelectedEquation[
            "QUADRATIC", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
          Button[
          "Exponential", $CellContext`equation = \
$CellContext`generateSelectedEquation[
            "EXPONENTIAL", $CellContext`withResult$$, \
$CellContext`withSolution$$], ImageSize -> 80], 
          Spacer[50], 
          Manipulate`Place[1], 
          Spacer[50], 
          Manipulate`Place[2]}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1063., {378., 385.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.827171813482303*^9, 3.8271718844544497`*^9, 3.827171920263809*^9, {
   3.8271719734910274`*^9, 3.8271719943205767`*^9}, 3.8271720577024302`*^9, 
   3.827172114557525*^9, {3.8271722320572376`*^9, 3.8271722850094852`*^9}, 
   3.8271724816810455`*^9, {3.8271725585750046`*^9, 3.827172609580962*^9}, {
   3.827172791440776*^9, 3.8271728509002056`*^9}, 3.8272053583387213`*^9, 
   3.827205412050756*^9, 3.8272054724406633`*^9, 3.827205786203446*^9, 
   3.827205832119171*^9, 3.827205959935604*^9, 3.8272060727038403`*^9, 
   3.827206201627912*^9, 3.8272063029096766`*^9, 3.8272064010514317`*^9, 
   3.827206473540553*^9, 3.827206511021984*^9, 3.827206553304077*^9}]
}, Open  ]]
},
WindowSize->{1264, 583},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification->1.5,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 11471, 256, 1934, "Input"],
Cell[12053, 280, 5168, 114, 787, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
